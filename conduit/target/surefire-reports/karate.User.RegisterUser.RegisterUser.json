[{"line":1,"elements":[{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url url","result":{"duration":21800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7}]},{"line":9,"name":"check the service POST method","description":"","id":"check-the-service-post-method","type":"scenario","keyword":"Scenario","steps":[{"name":"def requestBody = read('karate\/User\/RegisterUser\/BodyRequest.json')","result":{"duration":5992000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def responseRegister = read('karate\/User\/RegisterUser\/RegisterResponses.json')","result":{"duration":7011700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"path 'users'","result":{"duration":223900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":14},{"name":"request requestBody","result":{"duration":12200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":15},{"name":"method POST","result":{"duration":395592100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":16,"doc_string":{"content_type":"","value":"20:19:47.267 request:\n1 > POST https:\/\/angular-conduit-node.herokuapp.com\/api\/users\n1 > Accept-Encoding: gzip,deflate\n1 > Connection: Keep-Alive\n1 > Content-Length: 71\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Host: angular-conduit-node.herokuapp.com\n1 > User-Agent: Apache-HttpClient\/4.5.12 (Java\/1.8.0_202)\n{\"user\":{\"username\":\"leon\",\"email\":\"leon@gmail.com\",\"password\":\"leon\"}}\n\n20:19:47.661 response time in milliseconds: 393,26\n1 < 422\n1 < Access-Control-Allow-Origin: *\n1 < Connection: keep-alive\n1 < Content-Length: 71\n1 < Content-Type: application\/json; charset=utf-8\n1 < Date: Fri, 30 Sep 2022 01:19:45 GMT\n1 < Etag: W\/\"47-y9P+uj5JItUO5NTxYErRXQ\"\n1 < Server: Cowboy\n1 < Vary: X-HTTP-Method-Override\n1 < Via: 1.1 vegur\n1 < X-Powered-By: Express\n{\"errors\":{\"email\":\"is already taken.\",\"username\":\"is already taken.\"}}","line":16}},{"name":"status 200","result":{"duration":239300,"error_message":"com.intuit.karate.exception.KarateException: RegisterUser.feature:17 - status code was: 422, expected: 200, response time: 393, url: https:\/\/angular-conduit-node.herokuapp.com\/api\/users, response: {\"errors\":{\"email\":\"is already taken.\",\"username\":\"is already taken.\"}}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":17,"doc_string":{"content_type":"","value":"20:19:47.661 status code was: 422, expected: 200, response time: 393, url: https:\/\/angular-conduit-node.herokuapp.com\/api\/users, response: {\"errors\":{\"email\":\"is already taken.\",\"username\":\"is already taken.\"}}","line":17}},{"name":"match response == responseRegister","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":18}]}],"name":"karate\/User\/RegisterUser\/RegisterUser.feature","description":"Service client Post\nAs QA Automation\r\n  I want to register a client\r\n  To validate the status code and response","id":"service-client-post","keyword":"Feature","uri":"karate\/User\/RegisterUser\/RegisterUser.feature"}]