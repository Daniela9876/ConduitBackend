[{"line":1,"elements":[{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url url","result":{"duration":62600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7}]},{"line":9,"name":"check the service POST method","description":"","id":"check-the-service-post-method","type":"scenario","keyword":"Scenario","steps":[{"name":"def requestBody = read('karate\/User\/RegisterUser\/BodyRequest.json')","result":{"duration":379440900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def responseRegister = read('karate\/User\/RegisterUser\/RegisterResponses.json')","result":{"duration":10170100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"path 'users'","result":{"duration":2743100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":14},{"name":"request requestBody","result":{"duration":29600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":15},{"name":"method POST","result":{"duration":1773337200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":16,"doc_string":{"content_type":"","value":"20:14:38.906 request:\n1 > POST https:\/\/angular-conduit-node.herokuapp.com\/api\/users\n1 > Accept-Encoding: gzip,deflate\n1 > Connection: Keep-Alive\n1 > Content-Length: 71\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Host: angular-conduit-node.herokuapp.com\n1 > User-Agent: Apache-HttpClient\/4.5.12 (Java\/1.8.0_202)\n{\"user\":{\"username\":\"leon\",\"email\":\"leon@gmail.com\",\"password\":\"leon\"}}\n\n20:14:39.785 response time in milliseconds: 877,02\n1 < 200\n1 < Access-Control-Allow-Origin: *\n1 < Connection: keep-alive\n1 < Content-Length: 259\n1 < Content-Type: application\/json; charset=utf-8\n1 < Date: Fri, 30 Sep 2022 01:14:37 GMT\n1 < Etag: W\/\"103-7C83N5FmyyUmzqhZGP7UZw\"\n1 < Server: Cowboy\n1 < Vary: X-HTTP-Method-Override\n1 < Via: 1.1 vegur\n1 < X-Powered-By: Express\n{\"user\":{\"username\":\"leon\",\"email\":\"leon@gmail.com\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMzY0MmZkNjk1YWU3MDAxNzM0ZjExMSIsInVzZXJuYW1lIjoibGVvbiIsImV4cCI6MTY2OTY4NDQ3NywiaWF0IjoxNjY0NTAwNDc3fQ.QIArf6zl3R9UU_iVgIq2kk79hrgSNpo4JSpaadR2F0E\"}}","line":16}},{"name":"status 200","result":{"duration":14500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":17},{"name":"match response == responseRegister","result":{"duration":1734000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":18}]}],"name":"src\/test\/resources\/karate\/User\/RegisterUser\/RegisterUser.feature","description":"Service client Post\nAs QA Automation\r\n  I want to register a client\r\n  To validate the status code and response","id":"service-client-post","keyword":"Feature","uri":"src\/test\/resources\/karate\/User\/RegisterUser\/RegisterUser.feature"}]